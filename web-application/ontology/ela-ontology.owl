<?xml version="1.0"?>
<rdf:RDF xmlns="http://www.semanticweb.org/rober/ontologies/2024/1/untitled-ontology-3#"
     xml:base="http://www.semanticweb.org/rober/ontologies/2024/1/untitled-ontology-3"
     xmlns:owl="http://www.w3.org/2002/07/owl#"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:xml="http://www.w3.org/XML/1998/namespace"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
     xmlns:ela-ontology="http://www.semanticweb.org/ela-ontology#">
    <owl:Ontology rdf:about="http://www.semanticweb.org/ela-ontology"/>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Object Properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.semanticweb.org/ela-ontology#created -->

    <owl:ObjectProperty rdf:about="http://www.semanticweb.org/ela-ontology#created">
        <owl:inverseOf rdf:resource="http://www.semanticweb.org/ela-ontology#isCreatedBy"/>
        <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#AsymmetricProperty"/>
        <rdfs:domain rdf:resource="http://www.semanticweb.org/ela-ontology#Person"/>
        <rdfs:range rdf:resource="http://www.semanticweb.org/ela-ontology#Language"/>
    </owl:ObjectProperty>
    


    <!-- http://www.semanticweb.org/ela-ontology#hasDifficulty -->

    <owl:ObjectProperty rdf:about="http://www.semanticweb.org/ela-ontology#hasDifficulty">
        <rdfs:domain rdf:resource="http://www.semanticweb.org/ela-ontology#Language"/>
        <rdfs:range rdf:resource="http://www.semanticweb.org/ela-ontology#Difficulty"/>
    </owl:ObjectProperty>
    


    <!-- http://www.semanticweb.org/ela-ontology#hasParadigm -->

    <owl:ObjectProperty rdf:about="http://www.semanticweb.org/ela-ontology#hasParadigm">
        <rdfs:domain rdf:resource="http://www.semanticweb.org/ela-ontology#Language"/>
        <rdfs:range rdf:resource="http://www.semanticweb.org/ela-ontology#Paradigm"/>
    </owl:ObjectProperty>
    


    <!-- http://www.semanticweb.org/ela-ontology#isCompiledWith -->

    <owl:ObjectProperty rdf:about="http://www.semanticweb.org/ela-ontology#isCompiledWith">
        <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#AsymmetricProperty"/>
        <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#IrreflexiveProperty"/>
        <rdfs:domain rdf:resource="http://www.semanticweb.org/ela-ontology#Language"/>
        <rdfs:range rdf:resource="http://www.semanticweb.org/ela-ontology#Compiler"/>
    </owl:ObjectProperty>
    


    <!-- http://www.semanticweb.org/ela-ontology#isCreatedBy -->

    <owl:ObjectProperty rdf:about="http://www.semanticweb.org/ela-ontology#isCreatedBy">
        <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#AsymmetricProperty"/>
        <rdfs:domain rdf:resource="http://www.semanticweb.org/ela-ontology#Language"/>
        <rdfs:range rdf:resource="http://www.semanticweb.org/ela-ontology#Person"/>
    </owl:ObjectProperty>
    


    <!-- http://www.semanticweb.org/ela-ontology#isDevelopedIn -->

    <owl:ObjectProperty rdf:about="http://www.semanticweb.org/ela-ontology#isDevelopedIn">
        <rdfs:domain rdf:resource="http://www.semanticweb.org/ela-ontology#Language"/>
        <rdfs:range rdf:resource="http://www.semanticweb.org/ela-ontology#IDE"/>
    </owl:ObjectProperty>
    


    <!-- http://www.semanticweb.org/ela-ontology#isExampleFor -->

    <owl:ObjectProperty rdf:about="http://www.semanticweb.org/ela-ontology#isExampleFor">
        <rdfs:domain rdf:resource="http://www.semanticweb.org/ela-ontology#Program"/>
        <rdfs:range rdf:resource="http://www.semanticweb.org/ela-ontology#Language"/>
    </owl:ObjectProperty>
    


    <!-- http://www.semanticweb.org/ela-ontology#isInterpretedBy -->

    <owl:ObjectProperty rdf:about="http://www.semanticweb.org/ela-ontology#isInterpretedBy">
        <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#AsymmetricProperty"/>
        <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#IrreflexiveProperty"/>
        <rdfs:domain rdf:resource="http://www.semanticweb.org/ela-ontology#Language"/>
        <rdfs:range rdf:resource="http://www.semanticweb.org/ela-ontology#Interpreter"/>
    </owl:ObjectProperty>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Data properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.semanticweb.org/ela-ontology#DateOfCreation -->

    <owl:DatatypeProperty rdf:about="http://www.semanticweb.org/ela-ontology#DateOfCreation">
        <rdfs:domain rdf:resource="http://www.semanticweb.org/ela-ontology#Language"/>
        <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#dateTime"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.semanticweb.org/ela-ontology#DifficultyDescription -->

    <owl:DatatypeProperty rdf:about="http://www.semanticweb.org/ela-ontology#DifficultyDescription">
        <rdfs:domain rdf:resource="http://www.semanticweb.org/ela-ontology#Difficulty"/>
        <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.semanticweb.org/ela-ontology#ExternalLink -->

    <owl:DatatypeProperty rdf:about="http://www.semanticweb.org/ela-ontology#ExternalLink">
        <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#anyURI"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.semanticweb.org/ela-ontology#IdeDescription -->

    <owl:DatatypeProperty rdf:about="http://www.semanticweb.org/ela-ontology#IdeDescription">
        <rdfs:domain rdf:resource="http://www.semanticweb.org/ela-ontology#IDE"/>
        <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.semanticweb.org/ela-ontology#IdeName -->

    <owl:DatatypeProperty rdf:about="http://www.semanticweb.org/ela-ontology#IdeName">
        <rdfs:domain rdf:resource="http://www.semanticweb.org/ela-ontology#IDE"/>
        <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.semanticweb.org/ela-ontology#InterpreterDescription -->

    <owl:DatatypeProperty rdf:about="http://www.semanticweb.org/ela-ontology#InterpreterDescription">
        <rdfs:domain rdf:resource="http://www.semanticweb.org/ela-ontology#Interpreter"/>
        <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.semanticweb.org/ela-ontology#InterpreterName -->

    <owl:DatatypeProperty rdf:about="http://www.semanticweb.org/ela-ontology#InterpreterName">
        <rdfs:domain rdf:resource="http://www.semanticweb.org/ela-ontology#Interpreter"/>
        <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.semanticweb.org/ela-ontology#LanguageDescription -->

    <owl:DatatypeProperty rdf:about="http://www.semanticweb.org/ela-ontology#LanguageDescription">
        <rdfs:domain rdf:resource="http://www.semanticweb.org/ela-ontology#Language"/>
        <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.semanticweb.org/ela-ontology#LanguageName -->

    <owl:DatatypeProperty rdf:about="http://www.semanticweb.org/ela-ontology#LanguageName">
        <rdfs:domain rdf:resource="http://www.semanticweb.org/ela-ontology#Language"/>
        <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.semanticweb.org/ela-ontology#ParadigmDescription -->

    <owl:DatatypeProperty rdf:about="http://www.semanticweb.org/ela-ontology#ParadigmDescription">
        <rdfs:domain rdf:resource="http://www.semanticweb.org/ela-ontology#Paradigm"/>
        <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.semanticweb.org/ela-ontology#ParadigmName -->

    <owl:DatatypeProperty rdf:about="http://www.semanticweb.org/ela-ontology#ParadigmName">
        <rdfs:domain rdf:resource="http://www.semanticweb.org/ela-ontology#Paradigm"/>
        <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.semanticweb.org/ela-ontology#PersonDescription -->

    <owl:DatatypeProperty rdf:about="http://www.semanticweb.org/ela-ontology#PersonDescription">
        <rdfs:domain rdf:resource="http://www.semanticweb.org/ela-ontology#Person"/>
        <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.semanticweb.org/ela-ontology#PersonName -->

    <owl:DatatypeProperty rdf:about="http://www.semanticweb.org/ela-ontology#PersonName">
        <rdfs:domain rdf:resource="http://www.semanticweb.org/ela-ontology#Person"/>
        <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.semanticweb.org/ela-ontology#ProgramCode -->

    <owl:DatatypeProperty rdf:about="http://www.semanticweb.org/ela-ontology#ProgramCode">
        <rdfs:domain rdf:resource="http://www.semanticweb.org/ela-ontology#Program"/>
        <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.semanticweb.org/ela-ontology#ProgramDescription -->

    <owl:DatatypeProperty rdf:about="http://www.semanticweb.org/ela-ontology#ProgramDescription">
        <rdfs:domain rdf:resource="http://www.semanticweb.org/ela-ontology#Program"/>
        <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    </owl:DatatypeProperty>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Classes
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.semanticweb.org/ela-ontology#CatProgram -->

    <owl:Class rdf:about="http://www.semanticweb.org/ela-ontology#CatProgram">
        <rdfs:subClassOf rdf:resource="http://www.semanticweb.org/ela-ontology#Program"/>
    </owl:Class>
    


    <!-- http://www.semanticweb.org/ela-ontology#Compiler -->

    <owl:Class rdf:about="http://www.semanticweb.org/ela-ontology#Compiler">
        <rdfs:comment xml:lang="en">A compiler is a tool to create executable code from the esoteric language</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.semanticweb.org/ela-ontology#Difficulty -->

    <owl:Class rdf:about="http://www.semanticweb.org/ela-ontology#Difficulty">
        <rdfs:comment xml:lang="en">The usability defines how easy is it to program in a given language</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.semanticweb.org/ela-ontology#HelloWorldProgram -->

    <owl:Class rdf:about="http://www.semanticweb.org/ela-ontology#HelloWorldProgram">
        <rdfs:subClassOf rdf:resource="http://www.semanticweb.org/ela-ontology#Program"/>
    </owl:Class>
    


    <!-- http://www.semanticweb.org/ela-ontology#IDE -->

    <owl:Class rdf:about="http://www.semanticweb.org/ela-ontology#IDE">
        <rdfs:comment xml:lang="en">IDE represents a tool with which someone can develop applications</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.semanticweb.org/ela-ontology#Interpreter -->

    <owl:Class rdf:about="http://www.semanticweb.org/ela-ontology#Interpreter">
        <rdfs:comment xml:lang="en">An interpreter is a tool developed in an programming language to analyze and execute code for another/same language.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.semanticweb.org/ela-ontology#Language -->

    <owl:Class rdf:about="http://www.semanticweb.org/ela-ontology#Language">
        <rdfs:comment xml:lang="en">The language class represents the concept of an esoteric language</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.semanticweb.org/ela-ontology#Paradigm -->

    <owl:Class rdf:about="http://www.semanticweb.org/ela-ontology#Paradigm">
        <rdfs:comment xml:lang="en">Paradigm represents the programming style used in a given language (imperative, OOP, functional etc.)</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.semanticweb.org/ela-ontology#Person -->

    <owl:Class rdf:about="http://www.semanticweb.org/ela-ontology#Person">
        <rdfs:comment xml:lang="en">The person in this ontology represents the author of the language</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.semanticweb.org/ela-ontology#Program -->

    <owl:Class rdf:about="http://www.semanticweb.org/ela-ontology#Program">
        <rdfs:comment xml:lang="en">A program represents a solution developed in a given language</rdfs:comment>
    </owl:Class>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Individuals
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.semanticweb.org/ela-ontology#AddTwoNumbers_TIE -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#AddTwoNumbers_TIE">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#Program"/>
        <ela-ontology:isExampleFor rdf:resource="http://www.semanticweb.org/ela-ontology#This_elolang_is_not_a_push-down_automata"/>
        <ela-ontology:ProgramCode rdf:datatype="http://www.w3.org/2001/XMLSchema#string">,,+.</ela-ontology:ProgramCode>
        <ela-ontology:ProgramDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The &quot;A+B&quot; problem</ela-ontology:ProgramDescription>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#Among_Us -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#Among_Us">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#Language"/>
        <ela-ontology:hasDifficulty rdf:resource="http://www.semanticweb.org/ela-ontology#ModerateDifficulty"/>
        <ela-ontology:isCreatedBy rdf:resource="http://www.semanticweb.org/ela-ontology#Zero"/>
        <ela-ontology:isInterpretedBy rdf:resource="http://www.semanticweb.org/ela-ontology#GCC_AmongUs"/>
        <ela-ontology:LanguageDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Among Us is an esoteric programming language created by User:Zero player rodent. It is based on the popular game known as Among Us. The code is meant to look like conversations that are common in-game. The programs mostly consist of colours followed by the word &quot;SUS&quot;. &quot;SUS&quot; executes the command associated with the colour. The words &quot;WHO&quot; and &quot;WHERE&quot; are used for loops. The language uses 2 accumulators and a stack for memory. Among Us can store infinitely large numbers, but the &quot;WHO&quot; and &quot;WHERE&quot; commands will treat a value as if it resets back to 0 after it goes above 255. The &quot;WHO&quot; and &quot;WHERE&quot; commands also treat a value as if it is set to 255 after going lower than 0.

Command	Outcome
SUS	Execute command associated with colour.
VENTED	Increment accumulator 2 10 times.
SUSSY	Decrement accumulator 2.
ELECTRICAL	Set the value in accumulator 2 to 0.
WHO	Go past the next &quot;WHERE&quot; if the value at the top of the stack is equal to the value in accumulator 2.
WHERE	Go to last &quot;WHO&quot; if the value at the top of the stack is not equal to the value in accumulator 2.
(Question marks can be added to the ends of the &quot;WHO&quot; and &quot;WHERE&quot; commands to make them look better.)

Colour	Command
RED	Increment accumulator 1.
BLUE	Push the value in accumulator 1 to the top of the stack.
PURPLE	Pop the value at the top of the stack off of the stack.
GREEN	Output the ASCII character associated with the number at the top of the stack.
YELLOW	Push a byte of input to the top of the stack.
CYAN	Pop the value off of the top of the stack a random amount of times, the highest possible amount of times is equal to the value in accumulator 1.
BLACK	Output the value at the top of the stack.
WHITE	Decrement accumulator 1.
BROWN	Set the value in accumulator 1 to the value at the top of the stack.
LIME	Adds the value at the top of the stack to the value at the top of the stack.
PINK	Set the value in accumulator 1 to 0.
ORANGE	Increment accumulator 1 10 times.</ela-ontology:LanguageDescription>
        <ela-ontology:LanguageName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Among Us</ela-ontology:LanguageName>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#Areallycoolusername -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#Areallycoolusername">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#Person"/>
        <ela-ontology:created rdf:resource="http://www.semanticweb.org/ela-ontology#NopeFullStop"/>
        <ela-ontology:PersonName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Areallycoolusername</ela-ontology:PersonName>
        <ela-ontology:PersonName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Areallycoolusername has the most cool username in the history of cool usernames. You can&apos;t get cooler than the level of cool that Areallycoolusername has. Got it? Cool. Also the creator of Brain:D, GreeeeeeeeenText, Ummm..., Dunka!, DukkTap, and many others. You can find some of the interpreters for my languages on github. You can also see my other languages at the talk page in User: Jussef Swissen, my account for serious ideas. I&apos;ve also created the Arch Esoteric data structure.</ela-ontology:PersonName>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#Ben_Olmstead -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#Ben_Olmstead">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#Person"/>
        <ela-ontology:created rdf:resource="http://www.semanticweb.org/ela-ontology#Malbolge"/>
        <ela-ontology:PersonDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ben Olmstead is the inventor of Malbolge and Dis and co-designer of Wierd. He used to run a website on esoteric programming languages called The Random Programming Languages List. He was the organizer of the first Esoteric Awards.</ela-ontology:PersonDescription>
        <ela-ontology:PersonName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ben Olmstead</ela-ontology:PersonName>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#BrainFExec -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#BrainFExec">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#Interpreter"/>
        <ela-ontology:InterpreterDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">BrainFExec is a BrainFuck compiler to Windows executable in C#.
Usage:

BrainFExec &lt;input&gt; [output] [-o]

input: Input BrainFuck file name
output: Output BrainFuck file name
-o: Optimize
If output is not passed, BrainFExec automatically decides the file name: For example, if the input BrainFuck filename is a.bf, it sets the output file to a.exe.</ela-ontology:InterpreterDescription>
        <ela-ontology:InterpreterName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">BrainFExec</ela-ontology:InterpreterName>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#BrainForked -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#BrainForked">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#Interpreter"/>
        <ela-ontology:InterpreterDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This is almost standard C++, except for the use of clang++/g++ computed labels extension. At the time of writing (Aug 2020), it is the fastest non-JIT interpreter for the commonly referenced mandelbrot and hanoi BF programs.</ela-ontology:InterpreterDescription>
        <ela-ontology:InterpreterName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">BrainForked - Fast BF Interpreter</ela-ontology:InterpreterName>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#CatProgramNeverEnding_brainfuck -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#CatProgramNeverEnding_brainfuck">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#CatProgram"/>
        <ela-ontology:isExampleFor rdf:resource="http://www.semanticweb.org/ela-ontology#brainfuck"/>
        <ela-ontology:ProgramCode rdf:datatype="http://www.w3.org/2001/XMLSchema#string">+[&gt;,.&lt;]</ela-ontology:ProgramCode>
        <ela-ontology:ProgramDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A cat program writes its input directly to its output.
This program implements the version of a non-terminating program.</ela-ontology:ProgramDescription>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#CatProgramOneTime_TIE -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#CatProgramOneTime_TIE">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#CatProgram"/>
        <ela-ontology:isExampleFor rdf:resource="http://www.semanticweb.org/ela-ontology#This_elolang_is_not_a_push-down_automata"/>
        <ela-ontology:ProgramCode rdf:datatype="http://www.w3.org/2001/XMLSchema#string">?!</ela-ontology:ProgramCode>
        <ela-ontology:ProgramDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Prints once the given output</ela-ontology:ProgramDescription>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#CatProgram_HelloUnicorn -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#CatProgram_HelloUnicorn">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#CatProgram"/>
        <ela-ontology:isExampleFor rdf:resource="http://www.semanticweb.org/ela-ontology#Hello_today_I_am_a_unicorn"/>
        <ela-ontology:ProgramCode rdf:datatype="http://www.w3.org/2001/XMLSchema#string">x? copy exit
copy: x- y+ y~ y+
      x? flip next
flip: y~
next: x- x? copy exit
exit: x~</ela-ontology:ProgramCode>
        <ela-ontology:ProgramDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cat program made in Hello today I am a unicorn/
A cat program receives input and prints it.</ela-ontology:ProgramDescription>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#CatProgram_Malbolge -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#CatProgram_Malbolge">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#CatProgram"/>
        <ela-ontology:isExampleFor rdf:resource="http://www.semanticweb.org/ela-ontology#Malbolge"/>
        <ela-ontology:ProgramCode rdf:datatype="http://www.w3.org/2001/XMLSchema#string">(=BA#9&quot;=&lt;;:3y7x54-21q/p-,+*)&quot;!h%B0/.
~P&lt;
&lt;:(8&amp;
66#&quot;!~}|{zyxwvu
gJ%</ela-ontology:ProgramCode>
        <ela-ontology:ProgramDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A cat program in Malbolge (this one does not stop on EOF; one which does is several orders of magnitude more complex.</ela-ontology:ProgramDescription>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#Cell_Size_brainfuck -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#Cell_Size_brainfuck">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#Program"/>
        <ela-ontology:isExampleFor rdf:resource="http://www.semanticweb.org/ela-ontology#brainfuck"/>
        <ela-ontology:ProgramCode rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Calculate the value 256 and test if it&apos;s zero
If the interpreter errors on overflow this is where it&apos;ll happen
++++++++[&gt;++++++++&lt;-]&gt;[&lt;++++&gt;-]
+&lt;[&gt;-&lt;
    Not zero so multiply by 256 again to get 65536
    [&gt;++++&lt;-]&gt;[&lt;++++++++&gt;-]&lt;[&gt;++++++++&lt;-]
    +&gt;[&gt;
        # Print &quot;32&quot;
        ++++++++++[&gt;+++++&lt;-]&gt;+.-.[-]&lt;
    &lt;[-]&lt;-&gt;] &lt;[&gt;&gt;
        # Print &quot;16&quot;
        +++++++[&gt;+++++++&lt;-]&gt;.+++++.[-]&lt;
&lt;&lt;-]] &gt;[&gt;
    # Print &quot;8&quot;
    ++++++++[&gt;+++++++&lt;-]&gt;.[-]&lt;
&lt;-]&lt;
# Print &quot; bit cells\n&quot;
+++++++++++[&gt;+++&gt;+++++++++&gt;+++++++++&gt;+&lt;&lt;&lt;&lt;-]&gt;-.&gt;-.+++++++.+++++++++++.&lt;.
&gt;&gt;.++.+++++++..&lt;-.&gt;&gt;-
Clean up used cells.
[[-]&lt;]</ela-ontology:ProgramCode>
        <ela-ontology:ProgramDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This program outputs the cell width of the interpreter</ela-ontology:ProgramDescription>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#EasyDifficulty -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#EasyDifficulty">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#Difficulty"/>
        <ela-ontology:DifficultyDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This level of usability means that the language that has this usability assigned is quite simple to understand how it works.</ela-ontology:DifficultyDescription>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#GCC_AmongUs -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#GCC_AmongUs">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#Compiler"/>
        <ela-ontology:ExternalLink rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI"></ela-ontology:ExternalLink>
        <ela-ontology:InterpreterDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This compiler actually is an implementation for an interpreter.
It uses the classic gcc compiler and a header file, where are defined the macros for the Among Us esoteric language.

Header file: https://github.com/toc8730/amongus.cpp</ela-ontology:InterpreterDescription>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#Hakerh400 -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#Hakerh400">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#Person"/>
        <ela-ontology:created rdf:resource="http://www.semanticweb.org/ela-ontology#Hello_today_I_am_a_unicorn"/>
        <ela-ontology:PersonName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hakerh400</ela-ontology:PersonName>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#Hakerh400Esolang -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#Hakerh400Esolang">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#Interpreter"/>
        <ela-ontology:ExternalLink rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI">https://github.com/Hakerh400/esolangs</ela-ontology:ExternalLink>
        <ela-ontology:InterpreterDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This is an interpreter made in JS.</ela-ontology:InterpreterDescription>
        <ela-ontology:InterpreterName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hakerh400&apos;s interpreters</ela-ontology:InterpreterName>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#HardDifficulty -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#HardDifficulty">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#Difficulty"/>
        <ela-ontology:DifficultyDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This level of usability means that the language that has this usability assigned is difficult to understand how it works. Also the syntax may seem that it doens&apos;t make much sense.</ela-ontology:DifficultyDescription>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#HelloWorld_AmongUs -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#HelloWorld_AmongUs">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#HelloWorldProgram"/>
        <ela-ontology:isExampleFor rdf:resource="http://www.semanticweb.org/ela-ontology#Among_Us"/>
        <ela-ontology:ProgramCode rdf:datatype="http://www.w3.org/2001/XMLSchema#string">ORANGE SUS
BLUE SUS

ORANGE SUS ORANGE SUS
RED SUS RED SUS RED SUS
BLUE SUS

WHITE SUS WHITE SUS WHITE SUS
ORANGE SUS ORANGE SUS ORANGE SUS
ORANGE SUS ORANGE SUS ORANGE SUS ORANGE SUS
BLUE SUS

ORANGE SUS
WHITE SUS WHITE SUS
BLUE SUS

RED SUS RED SUS RED SUS
RED SUS RED SUS RED SUS
BLUE SUS

WHITE SUS WHITE SUS WHITE SUS
BLUE SUS

ORANGE SUS
WHITE SUS WHITE SUS
BLUE SUS

PINK SUS
ORANGE SUS ORANGE SUS ORANGE SUS
RED SUS RED SUS
BLUE SUS

ORANGE SUS
RED SUS RED SUS
BLUE SUS

ORANGE SUS ORANGE SUS ORANGE SUS
ORANGE SUS ORANGE SUS ORANGE SUS ORANGE SUS
WHITE SUS WHITE SUS WHITE SUS
BLUE SUS

WHITE SUS WHITE SUS WHITE SUS
BLUE SUS
BLUE SUS

WHITE SUS WHITE SUS WHITE SUS
WHITE SUS WHITE SUS WHITE SUS WHITE SUS
BLUE SUS

PINK SUS
ORANGE SUS ORANGE SUS ORANGE SUS
ORANGE SUS ORANGE SUS ORANGE SUS ORANGE SUS
RED SUS RED SUS
BLUE SUS

PINK SUS
VENTED VENTED
SUSSY SUSSY SUSSY
SUSSY SUSSY SUSSY
BLUE SUS
WHO?
PURPLE SUS
GREEN SUS
PURPLE SUS
SUSSY BLUE SUS
WHERE?</ela-ontology:ProgramCode>
        <ela-ontology:ProgramDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&quot;Hello World&quot; program written in Among Us</ela-ontology:ProgramDescription>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#HelloWorld_brainfuck -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#HelloWorld_brainfuck">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#HelloWorldProgram"/>
        <ela-ontology:isExampleFor rdf:resource="http://www.semanticweb.org/ela-ontology#brainfuck"/>
        <ela-ontology:ProgramCode rdf:datatype="http://www.w3.org/2001/XMLSchema#string">1 +++++ +++               Set Cell #0 to 8
 2 [
 3     &gt;++++               Add 4 to Cell #1; this will always set Cell #1 to 4
 4     [                   as the cell will be cleared by the loop
 5         &gt;++             Add 4*2 to Cell #2
 6         &gt;+++            Add 4*3 to Cell #3
 7         &gt;+++            Add 4*3 to Cell #4
 8         &gt;+              Add 4 to Cell #5
 9         &lt;&lt;&lt;&lt;-           Decrement the loop counter in Cell #1
10     ]                   Loop till Cell #1 is zero
11     &gt;+                  Add 1 to Cell #2
12     &gt;+                  Add 1 to Cell #3
13     &gt;-                  Subtract 1 from Cell #4
14     &gt;&gt;+                 Add 1 to Cell #6
15     [&lt;]                 Move back to the first zero cell you find; this will
16                         be Cell #1 which was cleared by the previous loop
17     &lt;-                  Decrement the loop Counter in Cell #0
18 ]                       Loop till Cell #0 is zero
19 
20 The result of this is:
21 Cell No :   0   1   2   3   4   5   6
22 Contents:   0   0  72 104  88  32   8
23 Pointer :   ^
24 
25 &gt;&gt;.                     Cell #2 has value 72 which is &apos;H&apos;
26 &gt;---.                   Subtract 3 from Cell #3 to get 101 which is &apos;e&apos;
27 +++++ ++..+++.          Likewise for &apos;llo&apos; from Cell #3
28 &gt;&gt;.                     Cell #5 is 32 for the space
29 &lt;-.                     Subtract 1 from Cell #4 for 87 to give a &apos;W&apos;
30 &lt;.                      Cell #3 was set to &apos;o&apos; from the end of &apos;Hello&apos;
31 +++.----- -.----- ---.  Cell #3 for &apos;rl&apos; and &apos;d&apos;
32 &gt;&gt;+.                    Add 1 to Cell #5 gives us an exclamation point
33 &gt;++.                    And finally a newline from Cell #6</ela-ontology:ProgramCode>
        <ela-ontology:ProgramDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Prints a &quot;Hello World&quot; message. The code is extended with comments. The code can be minimised to :
++++++++[&gt;++++[&gt;++&gt;+++&gt;+++&gt;+&lt;&lt;&lt;&lt;-]&gt;+&gt;+&gt;-&gt;&gt;+[&lt;]&lt;-]&gt;&gt;.&gt;---.+++++++..+++.&gt;&gt;.&lt;-.&lt;.+++.------.--------.&gt;&gt;+.&gt;++.</ela-ontology:ProgramDescription>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#Hello_today_I_am_a_unicorn -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#Hello_today_I_am_a_unicorn">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#Language"/>
        <ela-ontology:hasDifficulty rdf:resource="http://www.semanticweb.org/ela-ontology#HardDifficulty"/>
        <ela-ontology:hasParadigm rdf:resource="http://www.semanticweb.org/ela-ontology#Imperative"/>
        <ela-ontology:isCreatedBy rdf:resource="http://www.semanticweb.org/ela-ontology#Hakerh400"/>
        <ela-ontology:isInterpretedBy rdf:resource="http://www.semanticweb.org/ela-ontology#Hakerh400Esolang"/>
        <ela-ontology:DateOfCreation rdf:datatype="http://www.w3.org/2001/XMLSchema#dateTime">2020-01-01T00:00:00</ela-ontology:DateOfCreation>
        <ela-ontology:LanguageDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hello today I am a unicorn is a Turing-complete programming language that has only two variables.

Overview
There are only two variables: x and y. Both are non-negative integers of unlimited size.

Source code consists of zero or more instructions. Any instruction can be prefixed by a label.

Each instruction begins with the variable name it uses (x or y), then operator that is applied and operands.

Operator Xor
Denoted by ~. No operands. Inverts the lowest bit of the variable. Example:

x~
Value of x before: 123
Value of x after: 122

Operator Shift left
Denoted by +. No operands. Performs binary shift to the left. Example:

y+
Value of y before: 5
Value of y after: 10

Operator Shift right
Denoted by -. No operands. Performs binary shift to the right. Example:

x-
Value of x before: 15
Value of x after: 7

Operator If
Denoted by ?. Two operands (and they are labels). If the lowest bit is 1 jump to the first label, otherwise jump to the second label. Example:

y? label1 label2
label1: x+
label2: x-
If y is odd, x will be shifted left and then shifted right. If y is even, x will only be shifted right.

Note: all instructions except this simply increment instruction pointer.</ela-ontology:LanguageDescription>
        <ela-ontology:LanguageName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hello today I am a unicorn</ela-ontology:LanguageName>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#Imperative -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#Imperative">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#Paradigm"/>
        <ela-ontology:ParadigmDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">In computer science, imperative programming is a programming paradigm of software that uses statements that change a program&apos;s state. In much the same way that the imperative mood in natural languages expresses commands, an imperative program consists of commands for the computer to perform. Imperative programming focuses on describing how a program operates step by step,[1] rather than on high-level descriptions of its expected results.</ela-ontology:ParadigmDescription>
        <ela-ontology:ParadigmName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Imperative Programming</ela-ontology:ParadigmName>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#Malbolge -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#Malbolge">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#Language"/>
        <ela-ontology:hasDifficulty rdf:resource="http://www.semanticweb.org/ela-ontology#NoChanceDifficulty"/>
        <ela-ontology:isCreatedBy rdf:resource="http://www.semanticweb.org/ela-ontology#Ben_Olmstead"/>
        <ela-ontology:isInterpretedBy rdf:resource="http://www.semanticweb.org/ela-ontology#MalbolgeCInterpreter"/>
        <ela-ontology:isInterpretedBy rdf:resource="http://www.semanticweb.org/ela-ontology#MalbolgeOnlineInterpreter"/>
        <ela-ontology:DateOfCreation rdf:datatype="http://www.w3.org/2001/XMLSchema#dateTime">1998-01-01T20:20:00</ela-ontology:DateOfCreation>
        <ela-ontology:LanguageDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Malbolge, invented by Ben Olmstead in 1998, is an esoteric programming language designed to be as difficult to program in as possible. The first &quot;Hello, world!&quot; program written in it was produced by a Lisp program using a local beam search of the space of all possible programs. More practical programming methods have been found later. It is modelled as a virtual machine based on ternary digits.

The language is named after Malebolge [sic], the eighth level of hell in Dante&apos;s Inferno, which is reserved for perpetrators of fraud. The actual spelling Malbolge is also used for the sixth hell in the Dungeons and Dragons roleplaying game.</ela-ontology:LanguageDescription>
        <ela-ontology:LanguageName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Malbolge</ela-ontology:LanguageName>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#MalbolgeCInterpreter -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#MalbolgeCInterpreter">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#Interpreter"/>
        <ela-ontology:ExternalLink rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI">https://sange.fi/esoteric/orphaned/malbolge/</ela-ontology:ExternalLink>
        <ela-ontology:InterpreterDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Malbolge, 2004 edition

Quite a long time has passed since Malbolge was released.  It turned out
to have quite a few helpful features, and some useful (albeit trivial)
programs have emerged. 

 * the original malbolge interpreter, malbolge.c, and nop.mal, by Ben
   Olmstead</ela-ontology:InterpreterDescription>
        <ela-ontology:InterpreterName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Malbolge C interpreter</ela-ontology:InterpreterName>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#MalbolgeOnlineInterpreter -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#MalbolgeOnlineInterpreter">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#Interpreter"/>
        <ela-ontology:ExternalLink rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI">https://www.malbolge.doleczek.pl/</ela-ontology:ExternalLink>
        <ela-ontology:InterpreterDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Malbolge, invented by Ben Olmstead in 1998, is an esoteric programming language
designed to be as difficult to program in as possible.</ela-ontology:InterpreterDescription>
        <ela-ontology:InterpreterName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">MalbolgeJS</ela-ontology:InterpreterName>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#Mihai_Popa -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#Mihai_Popa">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#Person"/>
        <ela-ontology:created rdf:resource="http://www.semanticweb.org/ela-ontology#!English"/>
        <ela-ontology:PersonDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Mihai Popa is a programmer</ela-ontology:PersonDescription>
        <ela-ontology:PersonName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Mihai Popa</ela-ontology:PersonName>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#ModerateDifficulty -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#ModerateDifficulty">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#Difficulty"/>
        <ela-ontology:DifficultyDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This level of usability means that a languages assigned with this has its syntax quite complex compared to other common programming languages.
People will find it a little challenging to understand the syntax and how it works behind.</ela-ontology:DifficultyDescription>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#NoChanceDifficulty -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#NoChanceDifficulty">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#Difficulty"/>
        <ela-ontology:DifficultyDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This level of difficulty assigned to a language means that people will find it very hard to understand how to program in such a language and make the decision to leave it alone.</ela-ontology:DifficultyDescription>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#None1 -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#None1">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#Person"/>
        <ela-ontology:created rdf:resource="http://www.semanticweb.org/ela-ontology#This_elolang_is_not_a_push-down_automata"/>
        <ela-ontology:created rdf:resource="http://www.semanticweb.org/ela-ontology#!!Fuck_Python_Interpreter"/>
        <ela-ontology:PersonDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A person who likes esolangs (especially Brainfuck ) very much</ela-ontology:PersonDescription>
        <ela-ontology:PersonName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">None1</ela-ontology:PersonName>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#NopeFullStop -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#NopeFullStop">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#Language"/>
        <ela-ontology:hasDifficulty rdf:resource="http://www.semanticweb.org/ela-ontology#NoChanceDifficulty"/>
        <ela-ontology:LanguageDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Nope. is an esoteric programming language made by Areallycoolusername. You can code anything you would like, but the language will neither compile nor process it. This unfortunately means that Nope. is not Turing-complete. You could still create a quine and infinite number of self interpreters.</ela-ontology:LanguageDescription>
        <ela-ontology:LanguageName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Nope.</ela-ontology:LanguageName>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#ReverseText_AmongUs -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#ReverseText_AmongUs">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#Program"/>
        <ela-ontology:isExampleFor rdf:resource="http://www.semanticweb.org/ela-ontology#Among_Us"/>
        <ela-ontology:ExternalLink rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI">https://github.com/toc8730/amonguscpp/blob/main/amongus.h</ela-ontology:ExternalLink>
        <ela-ontology:ProgramCode rdf:datatype="http://www.w3.org/2001/XMLSchema#string">RED SUS BLUE SUS WHO? YELLOW SUS WHERE? PURPLE SUS WHO? GREEN SUS PURPLE SUS WHERE?</ela-ontology:ProgramCode>
        <ela-ontology:ProgramDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Program that reverses text</ela-ontology:ProgramDescription>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#TEI -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#TEI">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#Interpreter"/>
        <ela-ontology:ExternalLink rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI">https://github.com/none-None1/TEI</ela-ontology:ExternalLink>
        <ela-ontology:InterpreterDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Interpreters for the &quot;This esolang is not a push-down automata (or TEISNPDA or simple TEI)&quot; esolang</ela-ontology:InterpreterDescription>
        <ela-ontology:InterpreterName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">TEI</ela-ontology:InterpreterName>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#This_elolang_is_not_a_push-down_automata -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#This_elolang_is_not_a_push-down_automata">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#Language"/>
        <ela-ontology:hasDifficulty rdf:resource="http://www.semanticweb.org/ela-ontology#HardDifficulty"/>
        <ela-ontology:isCreatedBy rdf:resource="http://www.semanticweb.org/ela-ontology#None1"/>
        <ela-ontology:isInterpretedBy rdf:resource="http://www.semanticweb.org/ela-ontology#TEI"/>
        <ela-ontology:LanguageDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This esolang is not a push-down automata (or TEISNPDA or simple TEI) is, unlike its name, a push-down automata. It is invented by User:None1.

It uses only a stack that can contain nonnegative numbers of any size.

Command table

Command	Meaning
0~9	Push corresponding number onto the stack
+	Pop a and b, push b+a
-	Pop a and b, push b-a
*	Pop a and b, push b*a
,	Reads an integer and push it onto stack
.	Pop a and output as decimal, followed by a space
?	Reads a character and push its ASCII value onto the stack
!	Pop a and output as ASCII

Other characters (including whitespaces and line feeds) push their ASCII values onto the stack.</ela-ontology:LanguageDescription>
        <ela-ontology:LanguageName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This esolang is not a push-down automata</ela-ontology:LanguageName>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#Urban_Müller -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#Urban_Müller">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#Person"/>
        <ela-ontology:created rdf:resource="http://www.semanticweb.org/ela-ontology#brainfuck"/>
        <ela-ontology:PersonDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Urban Dominik Müller is the creator of the brainfuck programming language, and consequently quite a famous person in the Esolang community. He is apparently not involved with esoteric programming any more, though.

In 1992 he created the Aminet Archive, a huge archive of freeware, shareware and open source software (including the original brainfuck distribution), images, music and other multimedia for the Amiga, which was at one time the largest software archive on the internet. He is the author of XPK compression package for the Amiga, and the Amiga version of CSH (the Unix C Shell).</ela-ontology:PersonDescription>
        <ela-ontology:PersonName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Urban Müller</ela-ontology:PersonName>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#Zero -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#Zero">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#Person"/>
        <ela-ontology:created rdf:resource="http://www.semanticweb.org/ela-ontology#Among_Us"/>
        <ela-ontology:isCompiledWith rdf:resource="http://www.semanticweb.org/ela-ontology#GCC_AmongUs"/>
        <ela-ontology:PersonName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">User:Zero player rodent</ela-ontology:PersonName>
        <ela-ontology:PersonName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">User:Zero player rodent is the author of some esoteric programming languages. They have a list of languages that like and do not like.</ela-ontology:PersonName>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#brainfuck -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#brainfuck">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#Language"/>
        <ela-ontology:hasDifficulty rdf:resource="http://www.semanticweb.org/ela-ontology#HardDifficulty"/>
        <ela-ontology:hasParadigm rdf:resource="http://www.semanticweb.org/ela-ontology#Imperative"/>
        <ela-ontology:isCompiledWith rdf:resource="http://www.semanticweb.org/ela-ontology#BrainFExec"/>
        <ela-ontology:isCompiledWith rdf:resource="http://www.semanticweb.org/ela-ontology#BrainForked"/>
        <ela-ontology:isCreatedBy rdf:resource="http://www.semanticweb.org/ela-ontology#Urban_Müller"/>
        <ela-ontology:LanguageDescription>Brainfuck is one of the most famous esoteric programming languages, and has inspired the creation of a host of other languages. Due to the fact that the last half of its name is often considered one of the most offensive words in the English language, it is sometimes referred to as &quot;brainf***&quot;, &quot;brainf*ck&quot;, &quot;brainfsck&quot;, &quot;b****fuck&quot; (as a joke), &quot;brainf**k&quot;, &quot;branflakes&quot;, &quot;brainoof&quot;, &quot;brainfrick&quot;, &quot;bf&quot;, etc. This can make it a bit difficult to search for information regarding brainfuck on the web, as the proper name might not be used at all in some articles.

Brainfuck operates on an array of memory cells, each initially set to zero. (In the original implementation, the array was 30,000 cells long, but this may not be part of the language specification; different sizes for the array length and cell size give different variants of the language). There is a pointer, initially pointing to the first memory cell. The commands are:

Command	Description
&gt;	Move the pointer to the right
&lt;	Move the pointer to the left
+	Increment the memory cell at the pointer
-	Decrement the memory cell at the pointer
.	Output the character signified by the cell at the pointer
,	Input a character and store it in the cell at the pointer
[	Jump past the matching ] if the cell at the pointer is 0
]	Jump back to the matching [ if the cell at the pointer is nonzero
All characters other than &gt;&lt;+-.,[] should be considered comments and ignored.</ela-ontology:LanguageDescription>
        <ela-ontology:LanguageName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">brainfuck</ela-ontology:LanguageName>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#!English -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#!English">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#Language"/>
        <ela-ontology:hasDifficulty rdf:resource="http://www.semanticweb.org/ela-ontology#EasyDifficulty"/>
        <ela-ontology:isCreatedBy rdf:resource="http://www.semanticweb.org/ela-ontology#Mihai_Popa"/>
        <ela-ontology:LanguageDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">!English is a esolang made by Mihai Popa. It uses the English syntax, so any English person will understand it.</ela-ontology:LanguageDescription>
        <ela-ontology:LanguageName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">!English</ela-ontology:LanguageName>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#!!Fuck -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#!!Fuck">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#Language"/>
        <ela-ontology:hasDifficulty rdf:resource="http://www.semanticweb.org/ela-ontology#HardDifficulty"/>
        <ela-ontology:isCompiledWith rdf:resource="http://www.semanticweb.org/ela-ontology#BrainForked"/>
        <ela-ontology:isInterpretedBy rdf:resource="http://www.semanticweb.org/ela-ontology#!!Fuck_Python_Interpreter"/>
        <ela-ontology:LanguageDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">!!Fuck is a clone of Brainfuck that uses varying amounts of !&apos;s to indicate commands. It is a member of the TrivialBrainfuckSubstitution family of programming languages.

Brainfuck	!!Fuck
&gt;	!!!!!#
&lt;	!!!!!!#
+	!!!!!!!#
-	!!!!!!!!#
,	!!!!!!!!!#
.	!!!!!!!!!!#
[	!!!!!!!!!!!#
]	!!!!!!!!!!!!#</ela-ontology:LanguageDescription>
        <ela-ontology:LanguageName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">!!Fuck</ela-ontology:LanguageName>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#!!Fuck_Python_Interpreter -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#!!Fuck_Python_Interpreter">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#Interpreter"/>
        <ela-ontology:InterpreterDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The following program is an interpreter written in Python for !!Fuck.
The interpreter ignores any character except ! and #.</ela-ontology:InterpreterDescription>
        <ela-ontology:InterpreterName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">!!Fuck Python interpreter</ela-ontology:InterpreterName>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#C+++ -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#C+++">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#Language"/>
        <ela-ontology:hasDifficulty rdf:resource="http://www.semanticweb.org/ela-ontology#EasyDifficulty"/>
        <ela-ontology:isCompiledWith rdf:resource="http://www.semanticweb.org/ela-ontology#g++"/>
        <ela-ontology:DateOfCreation rdf:datatype="http://www.w3.org/2001/XMLSchema#dateTime">1993-01-01T00:00:00</ela-ontology:DateOfCreation>
        <ela-ontology:LanguageDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">C+++ is basically C++ but with less abbreviations &amp; it has new syntax added to make things slightly easier.</ela-ontology:LanguageDescription>
        <ela-ontology:LanguageName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">C+++</ela-ontology:LanguageName>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#CatProgram_!!Fuck -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#CatProgram_!!Fuck">
        <ela-ontology:isExampleFor rdf:resource="http://www.semanticweb.org/ela-ontology#!!Fuck"/>
        <ela-ontology:ProgramCode rdf:datatype="http://www.w3.org/2001/XMLSchema#string">!!!!!!!!!#!!!!!!!!!!#!!!!!!!!!!!#!!!!!!!!!#!!!!!!!!!!#!!!!!!!!!!!!#</ela-ontology:ProgramCode>
        <ela-ontology:ProgramDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An infinitely repeating cat program is implemented in the following:</ela-ontology:ProgramDescription>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#HelloWorld_!English -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#HelloWorld_!English">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#HelloWorldProgram"/>
        <ela-ontology:isExampleFor rdf:resource="http://www.semanticweb.org/ela-ontology#!English"/>
        <ela-ontology:ProgramCode rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Print &quot;Hello, world!&quot; and a newline</ela-ontology:ProgramCode>
        <ela-ontology:ProgramDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Print a &quot;Hello World!&quot; message</ela-ontology:ProgramDescription>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#HelloWorld_!!Fuck -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#HelloWorld_!!Fuck">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#HelloWorldProgram"/>
        <ela-ontology:isExampleFor rdf:resource="http://www.semanticweb.org/ela-ontology#!!Fuck"/>
        <ela-ontology:ProgramCode rdf:datatype="http://www.w3.org/2001/XMLSchema#string">!!!!!!!#!!!!!!!!!!!#!!!!!!!!#!!!!!!!!!!!#!!!!!!#!!!!!!#!!!!!!!!!!!#!!!!!!!#!!!!!!!!!!!#!!!!!!!!#!!!!!!!!#!!!!!!!!#!!!!!#!!!!!!!!!!!!#!!!!!!!!#!!!!!!!!!!!#!!!!!!#!!!!!!#!!!!!!#!!!!!!!!!!!!#!!!!!!!!!!!!#!!!!!!!!!!!!#!!!!!#!</ela-ontology:ProgramCode>
        <ela-ontology:ProgramDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Prints &quot;Hello World&quot;</ela-ontology:ProgramDescription>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#HelloWorld_C+++ -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#HelloWorld_C+++">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#HelloWorldProgram"/>
        <ela-ontology:isExampleFor rdf:resource="http://www.semanticweb.org/ela-ontology#C+++"/>
        <ela-ontology:ProgramCode rdf:datatype="http://www.w3.org/2001/XMLSchema#string">integer new main()
{
   println.format(&quot;Hello, world!&quot;);
   return 0;
}</ela-ontology:ProgramCode>
        <ela-ontology:ProgramDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Prints a &quot;Hello World&quot; message to the terminal</ela-ontology:ProgramDescription>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#RickRolling_!English -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#RickRolling_!English">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#Program"/>
        <ela-ontology:isExampleFor rdf:resource="http://www.semanticweb.org/ela-ontology#!English"/>
        <ela-ontology:ProgramCode rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Start this webpage: https://www.youtube.com/watch?v=dQw4w9WgXcQ</ela-ontology:ProgramCode>
        <ela-ontology:ProgramDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Starts a webpage with never-gonna-give-you-up meme</ela-ontology:ProgramDescription>
    </owl:NamedIndividual>
    


    <!-- http://www.semanticweb.org/ela-ontology#g++ -->

    <owl:NamedIndividual rdf:about="http://www.semanticweb.org/ela-ontology#g++">
        <rdf:type rdf:resource="http://www.semanticweb.org/ela-ontology#Compiler"/>
        <ela-ontology:InterpreterDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">GNU C++ Compiler ( g++ ) is a compiler in Linux which is used to compile C++ programs. It compiles both files with extension .c and .cpp as C++ files.</ela-ontology:InterpreterDescription>
        <ela-ontology:InterpreterName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">g++</ela-ontology:InterpreterName>
    </owl:NamedIndividual>
</rdf:RDF>



<!-- Generated by the OWL API (version 4.5.9.2019-02-01T07:24:44Z) https://github.com/owlcs/owlapi -->

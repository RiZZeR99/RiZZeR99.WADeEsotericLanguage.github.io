/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.52).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package ela.module_1.elafinder.api;

import ela.module_1.elafinder.models.Criteria;
import ela.module_1.elafinder.models.EsotericLanguage;
import ela.module_1.elafinder.models.EsotericLanguageSummary;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import java.util.List;


@Validated
public interface GetByCriteriaApi {

    @Operation(summary = "Get a list of esoteric languages based on the criteria", description = "Based on a list of completed criteria, the application will return a list of matched esoteric languages", tags = {"ela"})
    @ApiResponses(value = {
            @ApiResponse(responseCode = "200", description = "Successful operation", content = @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = EsotericLanguageSummary.class)))),

            @ApiResponse(responseCode = "404", description = "No esoteric language found based on the criteria"),

            @ApiResponse(responseCode = "500", description = "Server error")})
    @RequestMapping(value = "/getByCriteria",
            produces = {"application/json"},
            consumes = {"application/json"},
            method = RequestMethod.POST)
    ResponseEntity<List<EsotericLanguageSummary>> getByCriteria(@Parameter(in = ParameterIn.DEFAULT, description = "Entity with criteria completed by the user", required = true, schema = @Schema()) @RequestBody Criteria body
    );

}

